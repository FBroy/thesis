[{
    "data": {
        "attributes": {
            "type_description": "Win32 EXE",
            "tlsh": "T12063D64AB749EA30F59794B996FC2A13688E8978835F85C3FBD0C05A7651CC6B834F13",
            "vhash": "0740366d755\"z",
            "type_tags": [
                "executable",
                "windows",
                "win32",
                "pe",
                "peexe"
            ],
            "crowdsourced_yara_results": [
                {
                    "ruleset_id": "01598e8db9",
                    "rule_name": "Windows_Ransomware_Conti_89f3f6fa",
                    "ruleset_name": "Windows_Ransomware_Conti",
                    "source": "https://github.com/elastic/protections-artifacts",
                    "author": "Elastic Security"
                },
                {
                    "description": "Conti Ransomware",
                    "source": "https://github.com/kevoreilly/CAPEv2",
                    "author": "kevoreilly",
                    "ruleset_name": "Conti",
                    "rule_name": "Conti",
                    "ruleset_id": "00bcdd5f00"
                }
            ],
            "creation_date": 3632400331,
            "names": [
                "b39fcf37d9019cc92127ee82c03df5e37aa8238cd76cc6eca2e3d1e7e977fc26.exe"
            ],
            "last_modification_date": 1705936024,
            "type_tag": "peexe",
            "times_submitted": 2,
            "total_votes": {
                "harmless": 0,
                "malicious": 0
            },
            "size": 71955,
            "popular_threat_classification": {
                "suggested_threat_label": "ransomware.bluesky/conti",
                "popular_threat_category": [
                    {
                        "count": 22,
                        "value": "ransomware"
                    },
                    {
                        "count": 16,
                        "value": "trojan"
                    }
                ],
                "popular_threat_name": [
                    {
                        "count": 9,
                        "value": "bluesky"
                    },
                    {
                        "count": 8,
                        "value": "conti"
                    },
                    {
                        "count": 5,
                        "value": "encoder"
                    }
                ]
            },
            "authentihash": "7cf550ffb6bdea419249d1ec8f4325dc5f0ae2a63156352bc0233aaa19162f7a",
            "last_submission_date": 1660286305,
            "meaningful_name": "b39fcf37d9019cc92127ee82c03df5e37aa8238cd76cc6eca2e3d1e7e977fc26.exe",
            "crowdsourced_ids_stats": {
                "high": 0,
                "info": 0,
                "medium": 1,
                "low": 0
            },
            "trid": [
                {
                    "file_type": "Win32 Executable (generic)",
                    "probability": 35.7
                },
                {
                    "file_type": "Windows Icons Library (generic)",
                    "probability": 16.3
                },
                {
                    "file_type": "OS/2 Executable (generic)",
                    "probability": 16.1
                },
                {
                    "file_type": "Generic Win/DOS Executable",
                    "probability": 15.8
                },
                {
                    "file_type": "DOS Executable Generic",
                    "probability": 15.8
                }
            ],
            "sandbox_verdicts": {
                "Yomi Hunter": {
                    "category": "malicious",
                    "sandbox_name": "Yomi Hunter",
                    "malware_classification": [
                        "MALWARE"
                    ]
                }
            },
            "sha256": "b39fcf37d9019cc92127ee82c03df5e37aa8238cd76cc6eca2e3d1e7e977fc26",
            "type_extension": "exe",
            "tags": [
                "corrupt",
                "peexe",
                "overlay"
            ],
            "crowdsourced_ids_results": [
                {
                    "rule_category": "attempted-recon",
                    "rule_url": "https://www.snort.org/downloads/#rule-downloads",
                    "alert_severity": "medium",
                    "rule_msg": "(port_scan) UDP portsweep",
                    "rule_source": "Snort registered user ruleset",
                    "rule_raw": "alert ( gid:122; sid:19; rev:2; msg:\"(port_scan) UDP portsweep\"; metadata: rule-type preproc; classtype:attempted-recon;)",
                    "rule_id": "122:19"
                }
            ],
            "last_analysis_date": 1703842416,
            "unique_sources": 2,
            "first_submission_date": 1659974846,
            "sha1": "e5ee986c0e58e7e0fd070888dddd3f845e5dbdf8",
            "ssdeep": "1536:G+5geBR2Q+a8M124Zl2i5SADBDg8trv4t9MBY5yN:GDeBgQ+a8M12Y2i59hrvWMBB",
            "md5": "53c95a43491832f50e96327c1d23da40",
            "pe_info": {
                "timestamp": 3632400331,
                "sections": [
                    {
                        "name": ".text",
                        "chi2": 399545.56,
                        "virtual_address": 4096,
                        "flags": "rx",
                        "raw_size": 67584,
                        "entropy": 6.54,
                        "virtual_size": 67374,
                        "md5": "c30ec82ec7116566cc8c3ac1e1d31ee8"
                    },
                    {
                        "name": ".data",
                        "chi2": 5301.69,
                        "virtual_address": 73728,
                        "flags": "rw",
                        "raw_size": 3072,
                        "entropy": 7.67,
                        "virtual_size": 5736,
                        "md5": "885cdc5a270a2c91877f8af9cd6875cb"
                    },
                    {
                        "name": ".reloc",
                        "chi2": 2609.89,
                        "virtual_address": 81920,
                        "flags": "r",
                        "raw_size": 1024,
                        "entropy": 5.76,
                        "virtual_size": 792,
                        "md5": "607eb6bad178c394e1109fd0705177c9"
                    }
                ],
                "entry_point": 59520,
                "machine_type": 332,
                "overlay": {
                    "entropy": 5.764401435852051,
                    "offset": 71680,
                    "chi2": 2609.89,
                    "filetype": "unknown",
                    "md5": "607eb6bad178c394e1109fd0705177c9",
                    "size": 275
                }
            },
            "magic": "PE32 executable (GUI) Intel 80386, for MS Windows",
            "last_analysis_stats": {
                "harmless": 0,
                "type-unsupported": 4,
                "suspicious": 0,
                "confirmed-timeout": 0,
                "timeout": 2,
                "failure": 4,
                "malicious": 52,
                "undetected": 14
            },
            "last_analysis_results": {
                "Bkav": {
                    "category": "malicious",
                    "engine_name": "Bkav",
                    "engine_version": "2.0.0.1",
                    "result": "W32.AIDetectMalware",
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "Lionic": {
                    "category": "malicious",
                    "engine_name": "Lionic",
                    "engine_version": "7.5",
                    "result": "Trojan.Win32.Conti.j!c",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "tehtris": {
                    "category": "undetected",
                    "engine_name": "tehtris",
                    "engine_version": "v0.1.4-109-g76614fd",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "MicroWorld-eScan": {
                    "category": "malicious",
                    "engine_name": "MicroWorld-eScan",
                    "engine_version": "14.0.409.0",
                    "result": "Gen:Variant.Ransom.BlueSky.12",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "ClamAV": {
                    "category": "timeout",
                    "engine_name": "ClamAV",
                    "engine_version": "1.2.1.0",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "FireEye": {
                    "category": "malicious",
                    "engine_name": "FireEye",
                    "engine_version": "35.24.1.0",
                    "result": "Generic.mg.53c95a43491832f5",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "CAT-QuickHeal": {
                    "category": "malicious",
                    "engine_name": "CAT-QuickHeal",
                    "engine_version": "22.00",
                    "result": "Ransom.Bluesky.S28306275",
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "Skyhigh": {
                    "category": "malicious",
                    "engine_name": "Skyhigh",
                    "engine_version": "v2021.2.0+4045",
                    "result": "Artemis!Trojan",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "ALYac": {
                    "category": "malicious",
                    "engine_name": "ALYac",
                    "engine_version": "1.1.3.1",
                    "result": "Trojan.Ransom.Filecoder",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Cylance": {
                    "category": "malicious",
                    "engine_name": "Cylance",
                    "engine_version": "2.0.0.0",
                    "result": "unsafe",
                    "method": "blacklist",
                    "engine_update": "20231108"
                },
                "VIPRE": {
                    "category": "malicious",
                    "engine_name": "VIPRE",
                    "engine_version": "6.0.0.35",
                    "result": "Gen:Variant.Ransom.BlueSky.12",
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "Sangfor": {
                    "category": "malicious",
                    "engine_name": "Sangfor",
                    "engine_version": "2.23.0.0",
                    "result": "Ransom.Win32.Conti.V12t",
                    "method": "blacklist",
                    "engine_update": "20231227"
                },
                "CrowdStrike": {
                    "category": "malicious",
                    "engine_name": "CrowdStrike",
                    "engine_version": "1.0",
                    "result": "win/malicious_confidence_100% (W)",
                    "method": "blacklist",
                    "engine_update": "20231026"
                },
                "Alibaba": {
                    "category": "malicious",
                    "engine_name": "Alibaba",
                    "engine_version": "0.3.0.5",
                    "result": "Malware:Win32/km_2d26d.None",
                    "method": "blacklist",
                    "engine_update": "20190527"
                },
                "K7GW": {
                    "category": "malicious",
                    "engine_name": "K7GW",
                    "engine_version": "12.132.50567",
                    "result": "Riskware ( 00584baa1 )",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "K7AntiVirus": {
                    "category": "malicious",
                    "engine_name": "K7AntiVirus",
                    "engine_version": "12.132.50565",
                    "result": "Trojan ( 00597f0f1 )",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Arcabit": {
                    "category": "malicious",
                    "engine_name": "Arcabit",
                    "engine_version": "2022.0.0.18",
                    "result": "Trojan.Ransom.BlueSky.12",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Baidu": {
                    "category": "undetected",
                    "engine_name": "Baidu",
                    "engine_version": "1.0.0.2",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20190318"
                },
                "VirIT": {
                    "category": "undetected",
                    "engine_name": "VirIT",
                    "engine_version": "9.5.607",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "SymantecMobileInsight": {
                    "category": "type-unsupported",
                    "engine_name": "SymantecMobileInsight",
                    "engine_version": "2.0",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20230119"
                },
                "Symantec": {
                    "category": "malicious",
                    "engine_name": "Symantec",
                    "engine_version": "1.21.0.0",
                    "result": "Ransom.Conti!gm1",
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "Elastic": {
                    "category": "malicious",
                    "engine_name": "Elastic",
                    "engine_version": "4.0.121",
                    "result": "Windows.Ransomware.Conti",
                    "method": "blacklist",
                    "engine_update": "20231208"
                },
                "ESET-NOD32": {
                    "category": "malicious",
                    "engine_name": "ESET-NOD32",
                    "engine_version": "28481",
                    "result": "a variant of Win32/Filecoder.OLQ",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "APEX": {
                    "category": "malicious",
                    "engine_name": "APEX",
                    "engine_version": "6.483",
                    "result": "Malicious",
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "Paloalto": {
                    "category": "undetected",
                    "engine_name": "Paloalto",
                    "engine_version": "0.9.0.1003",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Cynet": {
                    "category": "malicious",
                    "engine_name": "Cynet",
                    "engine_version": "4.0.0.28",
                    "result": "Malicious (score: 100)",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Kaspersky": {
                    "category": "malicious",
                    "engine_name": "Kaspersky",
                    "engine_version": "22.0.1.28",
                    "result": "Trojan-Ransom.Win32.Agent.barh",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "BitDefender": {
                    "category": "malicious",
                    "engine_name": "BitDefender",
                    "engine_version": "7.2",
                    "result": "Gen:Variant.Ransom.BlueSky.12",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "NANO-Antivirus": {
                    "category": "malicious",
                    "engine_name": "NANO-Antivirus",
                    "engine_version": "1.0.146.25796",
                    "result": "Trojan.Win32.Encoder.jppkwo",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "SUPERAntiSpyware": {
                    "category": "undetected",
                    "engine_name": "SUPERAntiSpyware",
                    "engine_version": "5.6.0.1032",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Avast": {
                    "category": "failure",
                    "engine_name": "Avast",
                    "engine_version": "23.9.8494.0",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Tencent": {
                    "category": "malicious",
                    "engine_name": "Tencent",
                    "engine_version": "1.0.0.1",
                    "result": "Malware.Win32.Gencirc.10bdbd12",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Trustlook": {
                    "category": "type-unsupported",
                    "engine_name": "Trustlook",
                    "engine_version": "1.0",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "TACHYON": {
                    "category": "undetected",
                    "engine_name": "TACHYON",
                    "engine_version": "2023-12-29.02",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Emsisoft": {
                    "category": "malicious",
                    "engine_name": "Emsisoft",
                    "engine_version": "2022.6.0.32461",
                    "result": "Gen:Variant.Ransom.BlueSky.12 (B)",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "F-Secure": {
                    "category": "undetected",
                    "engine_name": "F-Secure",
                    "engine_version": "18.10.1547.307",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "DrWeb": {
                    "category": "malicious",
                    "engine_name": "DrWeb",
                    "engine_version": "7.0.61.8090",
                    "result": "Trojan.Encoder.35508",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Zillya": {
                    "category": "malicious",
                    "engine_name": "Zillya",
                    "engine_version": "2.0.0.5022",
                    "result": "Trojan.Encoder.Win32.3070",
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "TrendMicro": {
                    "category": "failure",
                    "engine_name": "TrendMicro",
                    "engine_version": "11.0.0.1006",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Trapmine": {
                    "category": "malicious",
                    "engine_name": "Trapmine",
                    "engine_version": "4.0.14.97",
                    "result": "malicious.high.ml.score",
                    "method": "blacklist",
                    "engine_update": "20231106"
                },
                "CMC": {
                    "category": "undetected",
                    "engine_name": "CMC",
                    "engine_version": "2.4.2022.1",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20230822"
                },
                "Sophos": {
                    "category": "malicious",
                    "engine_name": "Sophos",
                    "engine_version": "2.4.3.0",
                    "result": "Troj/Ransom-GRP",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "SentinelOne": {
                    "category": "malicious",
                    "engine_name": "SentinelOne",
                    "engine_version": "23.4.2.3",
                    "result": "Static AI - Malicious PE",
                    "method": "blacklist",
                    "engine_update": "20231119"
                },
                "Avast-Mobile": {
                    "category": "type-unsupported",
                    "engine_name": "Avast-Mobile",
                    "engine_version": "231229-00",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Jiangmin": {
                    "category": "malicious",
                    "engine_name": "Jiangmin",
                    "engine_version": "16.0.100",
                    "result": "Trojan.Encoder.aut",
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "Webroot": {
                    "category": "malicious",
                    "engine_name": "Webroot",
                    "engine_version": "1.0.0.403",
                    "result": "W32.Ransom.Bluesky",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Google": {
                    "category": "timeout",
                    "engine_name": "Google",
                    "engine_version": null,
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Avira": {
                    "category": "undetected",
                    "engine_name": "Avira",
                    "engine_version": "8.3.3.16",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Antiy-AVL": {
                    "category": "malicious",
                    "engine_name": "Antiy-AVL",
                    "engine_version": "3.0",
                    "result": "Trojan[Ransom]/Win32.Encoder",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Kingsoft": {
                    "category": "malicious",
                    "engine_name": "Kingsoft",
                    "engine_version": "None",
                    "result": "Win32.Troj.Generic.jm",
                    "method": "blacklist",
                    "engine_update": "20230906"
                },
                "Gridinsoft": {
                    "category": "malicious",
                    "engine_name": "Gridinsoft",
                    "engine_version": "1.0.153.174",
                    "result": "Ransom.Win32.Conti.oa!s1",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Xcitium": {
                    "category": "malicious",
                    "engine_name": "Xcitium",
                    "engine_version": "36298",
                    "result": "Malware@#28sqgr5m329d9",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Microsoft": {
                    "category": "malicious",
                    "engine_name": "Microsoft",
                    "engine_version": "1.1.23110.2",
                    "result": "Ransom:Win32/Conti.AD!MTB",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "ViRobot": {
                    "category": "undetected",
                    "engine_name": "ViRobot",
                    "engine_version": "2014.3.20.0",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "ZoneAlarm": {
                    "category": "malicious",
                    "engine_name": "ZoneAlarm",
                    "engine_version": "1.0",
                    "result": "Trojan-Ransom.Win32.Agent.barh",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "GData": {
                    "category": "malicious",
                    "engine_name": "GData",
                    "engine_version": "A:25.37059B:27.34371",
                    "result": "Gen:Variant.Ransom.BlueSky.12",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Varist": {
                    "category": "malicious",
                    "engine_name": "Varist",
                    "engine_version": "6.5.1.2",
                    "result": "W32/Agent.CC.gen!Eldorado",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "BitDefenderFalx": {
                    "category": "type-unsupported",
                    "engine_name": "BitDefenderFalx",
                    "engine_version": "2.0.936",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "AhnLab-V3": {
                    "category": "malicious",
                    "engine_name": "AhnLab-V3",
                    "engine_version": "3.25.0.10459",
                    "result": "Ransomware/Win.Bluesky.R500579",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Acronis": {
                    "category": "undetected",
                    "engine_name": "Acronis",
                    "engine_version": "1.2.0.121",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20230828"
                },
                "McAfee": {
                    "category": "malicious",
                    "engine_name": "McAfee",
                    "engine_version": "6.0.6.653",
                    "result": "GenericRXAA-AA!53C95A434918",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "MAX": {
                    "category": "malicious",
                    "engine_name": "MAX",
                    "engine_version": "2023.1.4.1",
                    "result": "malware (ai score=100)",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "VBA32": {
                    "category": "malicious",
                    "engine_name": "VBA32",
                    "engine_version": "5.0.0",
                    "result": "TrojanRansom.Conti",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Malwarebytes": {
                    "category": "malicious",
                    "engine_name": "Malwarebytes",
                    "engine_version": "4.5.5.54",
                    "result": "Malware.AI.630591782",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Panda": {
                    "category": "malicious",
                    "engine_name": "Panda",
                    "engine_version": "4.6.4.2",
                    "result": "Trj/CI.A",
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "Zoner": {
                    "category": "undetected",
                    "engine_name": "Zoner",
                    "engine_version": "2.2.2.0",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "TrendMicro-HouseCall": {
                    "category": "failure",
                    "engine_name": "TrendMicro-HouseCall",
                    "engine_version": "10.0.0.1040",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Rising": {
                    "category": "malicious",
                    "engine_name": "Rising",
                    "engine_version": "25.0.0.27",
                    "result": "Ransom.Conti!1.DF1E (CLASSIC)",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Yandex": {
                    "category": "undetected",
                    "engine_name": "Yandex",
                    "engine_version": "5.5.2.24",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Ikarus": {
                    "category": "malicious",
                    "engine_name": "Ikarus",
                    "engine_version": "6.2.4.0",
                    "result": "Trojan-Ransom.FileCrypter",
                    "method": "blacklist",
                    "engine_update": "20231228"
                },
                "MaxSecure": {
                    "category": "malicious",
                    "engine_name": "MaxSecure",
                    "engine_version": "1.0.0.1",
                    "result": "Trojan.Malware.186571712.susgen",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Fortinet": {
                    "category": "malicious",
                    "engine_name": "Fortinet",
                    "engine_version": "None",
                    "result": "W32/Filecoder.OLQ!tr.ransom",
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "BitDefenderTheta": {
                    "category": "undetected",
                    "engine_name": "BitDefenderTheta",
                    "engine_version": "7.2.37796.0",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231127"
                },
                "AVG": {
                    "category": "failure",
                    "engine_name": "AVG",
                    "engine_version": "23.9.8494.0",
                    "result": null,
                    "method": "blacklist",
                    "engine_update": "20231229"
                },
                "Cybereason": {
                    "category": "malicious",
                    "engine_name": "Cybereason",
                    "engine_version": "1.2.449",
                    "result": "malicious.c0e58e",
                    "method": "blacklist",
                    "engine_update": "20231102"
                },
                "DeepInstinct": {
                    "category": "malicious",
                    "engine_name": "DeepInstinct",
                    "engine_version": "3.1.0.15",
                    "result": "MALICIOUS",
                    "method": "blacklist",
                    "engine_update": "20231224"
                }
            },
            "reputation": 0
        },
        "type": "file",
        "id": "b39fcf37d9019cc92127ee82c03df5e37aa8238cd76cc6eca2e3d1e7e977fc26",
        "links": {
            "self": "https://www.virustotal.com/api/v3/files/b39fcf37d9019cc92127ee82c03df5e37aa8238cd76cc6eca2e3d1e7e977fc26"
        }
    }
},{
    "data": {
        "mitre_attack_techniques": [
            {
                "signature_description": "encode data using XOR",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "signature_description": "encrypt data using Curve25519",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "signature_description": "access PEB ldr_data",
                "id": "T1129",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "signature_description": "contain obfuscated stackstrings",
                "id": "T1027.005",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "signature_description": "get process heap flags",
                "id": "T1057",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "signature_description": "encrypt data using Salsa20 or ChaCha",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "signature_description": "encrypt data using RC4 PRGA",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "signature_description": "encrypt data using RC4 KSA",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "refs": [
                    {
                        "ref": "#signature_matches",
                        "value": "encode data using XOR"
                    }
                ],
                "signature_description": "encode data using XOR",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "refs": [
                    {
                        "ref": "#signature_matches",
                        "value": "encrypt data using Curve25519"
                    }
                ],
                "signature_description": "encrypt data using Curve25519",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "refs": [
                    {
                        "ref": "#signature_matches",
                        "value": "access PEB ldr_data"
                    }
                ],
                "signature_description": "access PEB ldr_data",
                "id": "T1129",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "refs": [
                    {
                        "ref": "#signature_matches",
                        "value": "contain obfuscated stackstrings"
                    }
                ],
                "signature_description": "contain obfuscated stackstrings",
                "id": "T1027.005",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "refs": [
                    {
                        "ref": "#signature_matches",
                        "value": "get process heap flags"
                    }
                ],
                "signature_description": "get process heap flags",
                "id": "T1057",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "refs": [
                    {
                        "ref": "#signature_matches",
                        "value": "encrypt data using Salsa20 or ChaCha"
                    }
                ],
                "signature_description": "encrypt data using Salsa20 or ChaCha",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "refs": [
                    {
                        "ref": "#signature_matches",
                        "value": "resolve function by djb2 hash"
                    }
                ],
                "signature_description": "resolve function by djb2 hash",
                "id": "T1027.005",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "refs": [
                    {
                        "ref": "#signature_matches",
                        "value": "encrypt data using RC4 KSA"
                    }
                ],
                "signature_description": "encrypt data using RC4 KSA",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "refs": [
                    {
                        "ref": "#signature_matches",
                        "value": "encrypt data using RC4 PRGA"
                    }
                ],
                "signature_description": "encrypt data using RC4 PRGA",
                "id": "T1027",
                "severity": "IMPACT_SEVERITY_INFO"
            },
            {
                "signature_description": "Manalize Local SandBox Packer Harvesting",
                "id": "T1045"
            },
            {
                "signature_description": "encode data using XOR",
                "id": "T1027"
            },
            {
                "signature_description": "encrypt data using Curve25519",
                "id": "T1027"
            },
            {
                "signature_description": "access PEB ldr_data",
                "id": "T1129"
            },
            {
                "signature_description": "get process heap flags",
                "id": "T1057"
            },
            {
                "signature_description": "encrypt data using Salsa20 or ChaCha",
                "id": "T1027"
            },
            {
                "signature_description": "resolve function by djb2 hash",
                "id": "T1027.005"
            },
            {
                "signature_description": "encrypt data using RC4 KSA",
                "id": "T1027"
            },
            {
                "signature_description": "encrypt data using RC4 PRGA",
                "id": "T1027"
            },
            {
                "signature_description": "Manalize Local SandBox Find Crypto",
                "id": "T1027.005"
            },
            {
                "signature_description": "Manalize Local SandBox Find Crypto",
                "id": "T1057"
            },
            {
                "signature_description": "Manalize Local SandBox Find Crypto",
                "id": "T1027"
            },
            {
                "signature_description": "Manalize Local SandBox Find Crypto",
                "id": "T1129"
            },
            {
                "signature_description": "contain obfuscated stackstrings",
                "id": "T1027.005"
            },
            {
                "signature_description": "The binary presents some anomalies in its PE header and/or PE sections.",
                "id": "T1027.005"
            },
            {
                "signature_description": "The binary presents some anomalies in its PE header and/or PE sections.",
                "id": "T1057"
            },
            {
                "signature_description": "The binary presents some anomalies in its PE header and/or PE sections.",
                "id": "T1027"
            },
            {
                "signature_description": "The binary presents some anomalies in its PE header and/or PE sections.",
                "id": "T1129"
            }
        ],
        "verdicts": [
            "MALWARE"
        ],
        "attack_techniques": {
            "T1027.005": [
                {
                    "severity": "INFO",
                    "description": "contain obfuscated stackstrings"
                },
                {
                    "severity": "INFO",
                    "description": "resolve function by djb2 hash"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "resolve function by djb2 hash"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "contain obfuscated stackstrings"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "The binary presents some anomalies in its PE header and/or PE sections."
                }
            ],
            "T1057": [
                {
                    "severity": "INFO",
                    "description": "get process heap flags"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "get process heap flags"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "The binary presents some anomalies in its PE header and/or PE sections."
                }
            ],
            "T1045": [
                {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Packer Harvesting"
                }
            ],
            "T1129": [
                {
                    "severity": "INFO",
                    "description": "access PEB ldr_data"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "access PEB ldr_data"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "The binary presents some anomalies in its PE header and/or PE sections."
                }
            ],
            "T1027": [
                {
                    "severity": "INFO",
                    "description": "encode data using XOR"
                },
                {
                    "severity": "INFO",
                    "description": "encrypt data using Curve25519"
                },
                {
                    "severity": "INFO",
                    "description": "encrypt data using Salsa20 or ChaCha"
                },
                {
                    "severity": "INFO",
                    "description": "encrypt data using RC4 PRGA"
                },
                {
                    "severity": "INFO",
                    "description": "encrypt data using RC4 KSA"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "encode data using XOR"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "encrypt data using Curve25519"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "encrypt data using Salsa20 or ChaCha"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "encrypt data using RC4 KSA"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "encrypt data using RC4 PRGA"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "Manalize Local SandBox Find Crypto"
                },
                {
                    "severity": "UNKNOWN",
                    "description": "The binary presents some anomalies in its PE header and/or PE sections."
                }
            ]
        },
        "signature_matches": [
            {
                "format": "SIG_FORMAT_CAPA",
                "rule_src": "rule:\n  meta:\n    name: calculate modulo 256 via x86 assembly\n    authors:\n      - moritz.raabe@mandiant.com\n    lib: true\n    scope: instruction\n    mbc:\n      - Data::Modulo [C0058]\n    examples:\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4049A9\n  features:\n    #  and ecx, 800000FFh\n    #  and ecx, 0FFh\n    - and:\n      - mnemonic: and\n      - or:\n        - number: 0x800000FF\n        - number: 0xFF\n",
                "name": "calculate modulo 256 via x86 assembly",
                "authors": [
                    "moritz.raabe@mandiant.com"
                ]
            },
            {
                "format": "SIG_FORMAT_CAPA",
                "authors": [
                    "moritz.raabe@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: encode data using XOR\n    namespace: data-manipulation/encoding/xor\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02]\n      - Data::Encode Data::XOR [C0026.002]\n    examples:\n      - 2D3EDC218A90F03089CC01715A9F047F:0x403D7E\n  features:\n    - and:\n      - characteristic: tight loop\n      - characteristic: nzxor\n      - not:\n        - description: filter for potential false positives\n        - or:\n          - or:\n            - description: unsigned bitwise negation operation (~i)\n            - number: 0xFFFFFFFF = bitwise negation for unsigned 32 bits\n            - number: 0xFFFFFFFFFFFFFFFF = bitwise negation for unsigned 64 bits\n          - or:\n            - description: signed bitwise negation operation (~i)\n            - number: 0x0FFFFFFF = bitwise negation for signed 32 bits\n            - number: 0x0FFFFFFFFFFFFFFF = bitwise negation for signed 64 bits\n          - or:\n            - description: Magic constants used in the implementation of strings functions.\n            # such as `strlen` and `strcat` in the Windows standard library:\n            # (((i - 0x81010101) ^ ~i) & 0x81010100)\n            ## 32 bits\n            - number: 0x7EFEFEFF = optimized string constant for 32 bits\n            - number: 0x81010101 = -0x81010101 = 0x7EFEFEFF\n            - number: 0x81010100 = 0x81010100 = ~0x7EFEFEFF\n            ## 64 bits\n            - number: 0x7EFEFEFEFEFEFEFF = optimized string constant for 64 bits\n            - number: 0x8101010101010101 = -0x8101010101010101 = 0x7EFEFEFEFEFEFEFF\n            - number: 0x8101010101010100 = 0x8101010101010100 = ~0x7EFEFEFEFEFEFEFF\n",
                "name": "encode data using XOR",
                "description": "data-manipulation/encoding/xor"
            },
            {
                "refs": [
                    {
                        "ref": "https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp"
                    }
                ],
                "format": "SIG_FORMAT_CAPA",
                "rule_src": "rule:\n  meta:\n    name: PEB access\n    authors:\n      - michael.hunhoff@mandiant.com\n    lib: true\n    scope: basic block\n    mbc:\n      - Anti-Behavioral Analysis::Debugger Detection::Process Environment Block [B0001.019]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp\n    examples:\n      - al-khaser_x86.exe_:0x420D20\n  features:\n    - or:\n      - characteristic: peb access\n      - and:\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L41\n        - arch: i386\n        - characteristic: fs access\n        - or:\n          # in 0f5d5d07c6533bc6d991836ce79daaa1\n          # then we have:\n          #\n          #     xor edx, edx\n          #     mov edx, fs:[edx+30h]\n          - offset: 0x30\n          - instruction:\n            # in the case of CallObfuscator, gs:[rax]\n            - mnemonic: add\n            - number: 0x30\n      - and:\n        - arch: amd64\n        - characteristic: gs access\n        - or:\n          - offset: 0x60\n          - instruction:\n            - mnemonic: add\n            - number: 0x60\n      - and:\n        # WoW64 PEB address is fetched via the WoW64 Thread Environment Block (TEB) at FS:[0x18]-0x2000\n        # https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/NtGlobalFlag.cpp#L45\n        - characteristic: fs access\n        - instruction:\n          - mnemonic: sub\n          - number: 0x2000\n",
                "name": "PEB access",
                "authors": [
                    "michael.hunhoff@mandiant.com"
                ]
            },
            {
                "format": "SIG_FORMAT_CAPA",
                "authors": [
                    "dimiter.andonov@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: encrypt data using Curve25519\n    namespace: data-manipulation/encryption/elliptic-curve\n    authors:\n      - dimiter.andonov@mandiant.com\n    description: Targets code that enforces Curve25519's secret key restrictions. The specification states \"The legitimate users are assumed to generate independent uniform random secret keys. A user can, for example, generate 32 uniform random bytes, clear bits 0, 1, 2 of the first byte, clear bit 7 of the last byte, and set bit 6 of the last byte.\"\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    examples:\n      - 0a0882b8da225406cc838991b5f67d11:0x4135f6\n      - 0a0882b8da225406cc838991b5f67d11:0x416f51\n      - 80372de850597bd9e7e021a94f13f0a1:0x406480\n      - 80372de850597bd9e7e021a94f13f0a1:0x4086f4\n      - b4a07cdd640bbaef21cd0493b4d62675:0x4098af\n  features:\n    # Common corresponding C source code:\n    #    e[0] &= 0xf8;\n    #   e[31] &= 0x7f;\n    #   e[31] |= 0x40;\n    - and:\n      - instruction:\n        - description: clear bits 0, 1, and 2 of the first byte\n        - mnemonic: and\n        - number: 0xf8\n      - or:\n        - instruction:\n          - description: clear bit 7 of the last byte\n          - mnemonic: and\n          - number: 0x7f\n        - instruction:\n          - description: clear bits 6 and 7 of the last byte; clearing bit 6 in addition to bit 7 is fine because bit 6 is ultimately set\n          - mnemonic: and\n          - number: 0x3f\n      - instruction:\n        - description: set bit 6 of the last byte\n        - mnemonic: or\n        - number: 0x40\n",
                "name": "encrypt data using Curve25519",
                "description": "data-manipulation/encryption/elliptic-curve : Targets code that enforces Curve25519's secret key restrictions. The specification states \"The legitimate users are assumed to generate independent uniform random secret keys. A user can, for example, generate 32 uniform random bytes, clear bits 0, 1, 2 of the first byte, clear bit 7 of the last byte, and set bit 6 of the last byte.\""
            },
            {
                "description": "linking/runtime-linking",
                "format": "SIG_FORMAT_CAPA",
                "refs": [
                    {
                        "ref": "https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb_ldr_data.htm"
                    },
                    {
                        "ref": "https://github.com/d35ha/CallObfuscator/blob/5834aff9ff4511f1408ae4ce80b79737af4ae77b/ShellCode/shell_x64.asm#L8"
                    }
                ],
                "authors": [
                    "moritz.raabe@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: access PEB ldr_data\n    namespace: linking/runtime-linking\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    att&ck:\n      - Execution::Shared Modules [T1129]\n    references:\n      - https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb_ldr_data.htm\n      - https://github.com/d35ha/CallObfuscator/blob/5834aff9ff4511f1408ae4ce80b79737af4ae77b/ShellCode/shell_x64.asm#L8\n    examples:\n      - 3FDFB2D522E7DEECAAAF2F87420F7E75:0x4117B7\n  features:\n    - or:\n      - and:\n        - arch: i386\n        - description: x32\n\n        - match: PEB access\n\n        # x86 Windows uses fs:0 to access the TIB which contains SEH information at offset 0\n        # checking for fs:0 and a (possibly unrelated) number or offset often results in false positives\n\n        - offset: 0x0C = PEB.LDR_DATA\n\n        - or:\n          - description: resolve a module list\n          - offset: 0x0C = PEB.LDR_DATA.InLoadOrderModuleList\n          - offset: 0x14 = PEB.LDR_DATA.InMemoryOrderModuleList\n          - offset: 0x1C = PEB.LDR_DATA.InInitializationOrderModuleList\n\n      - and:\n        - arch: amd64\n        - description: x64\n\n        - match: PEB access\n\n        - offset: 0x18 = PEB.LDR_DATA\n\n        - or:\n          - description: resolve a module list\n          - offset: 0x10 = PEB.LDR_DATA.InLoadOrderModuleList\n          - offset: 0x20 = PEB.LDR_DATA.InMemoryOrderModuleList\n          - offset: 0x30 = PEB.LDR_DATA.InInitializationOrderModuleList\n",
                "name": "access PEB ldr_data"
            },
            {
                "format": "SIG_FORMAT_CAPA",
                "authors": [
                    "moritz.raabe@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: contain obfuscated stackstrings\n    namespace: anti-analysis/obfuscation/string/stackstring\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information::Indicator Removal from Tools [T1027.005]\n    mbc:\n      - Anti-Static Analysis::Executable Code Obfuscation::Argument Obfuscation [B0032.020]\n      - Anti-Static Analysis::Executable Code Obfuscation::Stack Strings [B0032.017]\n    examples:\n      - Practical Malware Analysis Lab 16-03.exe_:0x4013D0\n  features:\n    - characteristic: stack string\n",
                "name": "contain obfuscated stackstrings",
                "description": "anti-analysis/obfuscation/string/stackstring"
            },
            {
                "description": "host-interaction/process",
                "format": "SIG_FORMAT_CAPA",
                "refs": [
                    {
                        "ref": "https://github.com/LordNoteworthy/al-khaser/blob/bed03d2f849d9060c68f8d5905bd204d0cb3f593/al-khaser/AntiDebug/ProcessHeap_Flags.cpp#L13"
                    }
                ],
                "authors": [
                    "michael.hunhoff@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: get process heap flags\n    namespace: host-interaction/process\n    authors:\n      - michael.hunhoff@mandiant.com\n    scope: basic block\n    att&ck:\n      - Discovery::Process Discovery [T1057]\n    references:\n      - https://github.com/LordNoteworthy/al-khaser/blob/bed03d2f849d9060c68f8d5905bd204d0cb3f593/al-khaser/AntiDebug/ProcessHeap_Flags.cpp#L13\n    examples:\n      - al-khaser_x86.exe_:0x425470\n  features:\n    - and:\n      - match: PEB access\n      - or:\n        - and:\n          - arch: i386\n          - number: 0x18 = PEB->ProcessHeap\n          - or:\n            - number: 0x40 = ProcessHeap->HeapFlags >= Vista\n            - number: 0xC = ProcessHeap->HeapFlags < Vista\n        - and:\n          - arch: amd64\n          - number: 0x30 = PEB->ProcessHeap\n          - or:\n            - number: 0x70 = ProcessHeap->HeapFlags >= Vista\n            - number: 0x14 = ProcessHeap->HeapFlags < Vista\n",
                "name": "get process heap flags"
            },
            {
                "description": "anti-analysis/anti-debugging/debugger-detection",
                "format": "SIG_FORMAT_CAPA",
                "refs": [
                    {
                        "ref": "Practical Malware Analysis, Chapter 16, p. 353"
                    }
                ],
                "authors": [
                    "moritz.raabe@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: check for PEB BeingDebugged flag\n    namespace: anti-analysis/anti-debugging/debugger-detection\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: basic block\n    mbc:\n      - Anti-Behavioral Analysis::Debugger Detection::Process Environment Block BeingDebugged [B0001.035]\n    references:\n      - Practical Malware Analysis, Chapter 16, p. 353\n    examples:\n      - Practical Malware Analysis Lab 16-01.exe_:0x403530\n  features:\n    - and:\n      - match: PEB access\n      - offset: 2 = PEB.BeingDebugged\n",
                "name": "check for PEB BeingDebugged flag"
            },
            {
                "format": "SIG_FORMAT_CAPA",
                "rule_src": "rule:\n  meta:\n    name: contain loop\n    authors:\n      - moritz.raabe@mandiant.com\n    lib: true\n    scope: function\n    examples:\n      - 08AC667C65D36D6542917655571E61C8:0x406EAA\n  features:\n    - or:\n      - characteristic: loop\n      - characteristic: tight loop\n      - characteristic: recursive call\n",
                "name": "contain loop",
                "authors": [
                    "moritz.raabe@mandiant.com"
                ]
            },
            {
                "description": "data-manipulation/encryption/salsa20",
                "format": "SIG_FORMAT_CAPA",
                "refs": [
                    {
                        "ref": "http://cr.yp.to/snuffle/ecrypt.c"
                    }
                ],
                "authors": [
                    "moritz.raabe@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: encrypt data using Salsa20 or ChaCha\n    namespace: data-manipulation/encryption/salsa20\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    references:\n      - http://cr.yp.to/snuffle/ecrypt.c\n  features:\n    # The constant words spell \"expand 32-byte k\" in ASCII (i.e. the 4 words are \"expa\", \"nd 3\", \"2-by\", and \"te k\")\n    - or:\n      - description: part of key setup\n      - string: \"expand 32-byte k = sigma\"\n      - string: \"expand 16-byte k = tau\"\n      # if sigma and tau are in contiguous memory, may result in concatenated string\n      - string: \"expand 32-byte kexpand 16-byte k\"\n      - and:\n        - string: \"expa\"\n        - string: \"nd 3\"\n        - string: \"2-by\"\n        - string: \"te k\"\n      - and:\n        - number: 0x61707865 = \"apxe\"\n        - number: 0x3320646E = \"3 dn\"\n        - number: 0x79622D32 = \"yb-2\"\n        - number: 0x6B206574 = \"k et\"\n",
                "name": "encrypt data using Salsa20 or ChaCha"
            },
            {
                "format": "SIG_FORMAT_CAPA",
                "authors": [
                    "still@teamt5.org"
                ],
                "rule_src": "rule:\n  meta:\n    name: resolve function by djb2 hash\n    namespace: linking/runtime-linking\n    authors:\n      - still@teamt5.org\n    description: known import name hashes calculated using the non-cryptographic djb2 hashing algorithm\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information::Indicator Removal from Tools [T1027.005]\n    mbc:\n      - Data::Non-Cryptographic Hash [C0030]\n  features:\n    - or:\n      - number: 0x5FBFF0FB = djb2(LoadLibraryA)\n      - number: 0x3870CA07 = djb2(CloseHandle)\n      - number: 0x382C0F97 = djb2(VirtualAlloc)\n      - number: 0x844FF18D = djb2(VirtualProtect)\n      - number: 0xCF31BB1F = djb2(GetProcAddress)\n      - number: 0xEB96C5FA = djb2(CreateFileA)\n      - number: 0xEB96C610 = djb2(CreateFileW)\n      - number: 0x71019921 = djb2(ReadFile)\n      - number: 0x0E19E5FE = djb2(Sleep)\n",
                "name": "resolve function by djb2 hash",
                "description": "linking/runtime-linking : known import name hashes calculated using the non-cryptographic djb2 hashing algorithm"
            },
            {
                "description": "data-manipulation/hashing/djb2",
                "format": "SIG_FORMAT_CAPA",
                "refs": [
                    {
                        "ref": "https://twitter.com/r3c0nst/status/1392405576131436546"
                    },
                    {
                        "ref": "http://www.cse.yorku.ca/~oz/hash.html"
                    }
                ],
                "authors": [
                    "awillia2@cisco.com",
                    "still@teamt5.org"
                ],
                "rule_src": "rule:\n  meta:\n    name: hash data using djb2\n    namespace: data-manipulation/hashing/djb2\n    authors:\n      - awillia2@cisco.com\n      - still@teamt5.org\n    scope: function\n    mbc:\n      - Data::Non-Cryptographic Hash::djb2 [C0030.006]\n    references:\n      - https://twitter.com/r3c0nst/status/1392405576131436546\n      - http://www.cse.yorku.ca/~oz/hash.html\n    examples:\n      - 6be0ae5cb7c3155f70d608fc7670d2d9:0x41DD19\n  features:\n    - and:\n      - instruction:\n        - description: hash = 5381\n        - mnemonic: mov\n        - number: 5381\n      - or:\n        - instruction:\n          - description: hash << 5\n          - mnemonic: shl\n          - number: 5\n        - instruction:\n          - description: hash * 33\n          - or:\n            - mnemonic: mul\n            - mnemonic: imul\n          - number: 33\n",
                "name": "hash data using djb2"
            },
            {
                "format": "SIG_FORMAT_CAPA",
                "authors": [
                    "sara-rn"
                ],
                "rule_src": "rule:\n  meta:\n    name: resolve function by parsing PE exports\n    namespace: load-code/pe\n    authors:\n      - sara-rn\n    scope: function\n    examples:\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x406BA1\n  features:\n    - and:\n      - os: windows\n      - or:\n        - characteristic: loop\n        - mnemonic: movzx\n      - and:\n        - offset: 0x3C = IMAGE_DOS_HEADER.PE.e_lfanew\n        - or:\n          - and:\n            - arch: i386\n            - offset: 0x78 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\n          - and:\n            - arch: amd64\n            - offset: 0x88 = offset to IMAGE_DATA_DIRECTORY[IMAGE_DIRECTORY_ENTRY_EXPORT]\n        - 3 or more:\n          - offset: 0x14 = IMAGE_EXPORT_DIRECTORY.NumberOfFunctions\n          - offset: 0x24 = IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals\n          - offset: 0x20 = IMAGE_EXPORT_DIRECTORY.AddressOfNames\n          - offset: 0x18 = IMAGE_EXPORT_DIRECTORY.NumberOfNames\n          - offset: 0x1C = IMAGE_EXPORT_DIRECTORY.AddressOfFunctions\n      - optional:\n        - or:\n          - api: LoadLibrary\n          - api: strcmp\n",
                "name": "resolve function by parsing PE exports",
                "description": "load-code/pe"
            },
            {
                "description": "data-manipulation/hashing/murmur",
                "format": "SIG_FORMAT_CAPA",
                "refs": [
                    {
                        "ref": "https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp"
                    }
                ],
                "authors": [
                    "william.ballenthin@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: hash data using murmur3\n    namespace: data-manipulation/hashing/murmur\n    authors:\n      - william.ballenthin@mandiant.com\n    scope: function\n    mbc:\n      - Data::Non-Cryptographic Hash::MurmurHash [C0030.001]\n    references:\n      - https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp\n    examples:\n      - c66172b12971a329f8d5ff01665f204b:0x404A18\n  features:\n    - or:\n      - and:\n        - number: 0x85ebca6b = 32-bit finalization mix constant 1\n        - number: 0xc2b2ae35 = 32-bit finalization mix constant 2\n      - and:\n        - number: 0xff51afd7ed558ccd = 64-bit finalization mix constant 1\n        - number: 0xc4ceb9fe1a85ec53 = 64-bit finalization mix constant 2\n      - and:\n        - number: 0xcc9e2d51 = c1 32-bit hash\n        - number: 0x1b873593 = c2 32-bit hash\n      - and:\n        - number: 0x239b961b = 32-bit c1 for 128-bit hash\n        - number: 0xab0e9789 = 32-bit c2 for 128-bit hash\n        - number: 0x38b34ae5 = 32-bit c3 for 128-bit hash\n        - number: 0xa1e38b93 = 32-bit c4 for 128-bit hash\n      - and:\n        - number: 0x87c37b91114253d5 = 64-bit c1 for 128-bit hash\n        - number: 0x4cf5ad432745937f = 64-bit c2 for 128-bit hash\n      - basic block:\n        - and:\n          - description: 'hash >> 16; hash >> 13; hash >> 16'\n          - count(mnemonic(shr)): 3\n          - instruction:\n            - mnemonic: shr\n            - number: 16\n          - instruction:\n            - mnemonic: shr\n            - number: 13\n          - optional:\n            - count(characteristic(nzxor)): 3 or more\n      - and:\n        # Group this two blocks under an `and` as on their own they are not\n        # unique enough and would cause false positives\n        - instruction:\n          - description: k ROL r1\n          - mnemonic: rol\n          - number: 15 = r1\n        - instruction:\n          - description: hash ROL r2\n          - mnemonic: rol\n          - number: 13 = r2\n",
                "name": "hash data using murmur3"
            },
            {
                "format": "SIG_FORMAT_CAPA",
                "authors": [
                    "moritz.raabe@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: encrypt data using RC4 KSA\n    namespace: data-manipulation/encryption/rc4\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Cryptography::Encrypt Data::RC4 [C0027.009]\n      - Cryptography::Encryption Key::RC4 KSA [C0028.002]\n    examples:\n      - 34404A3FB9804977C6AB86CB991FB130:0x403D40\n      - 9324D1A8AE37A36AE560C37448C9705A:0x404950\n      - 2B8BEC5BCB1777EAA155D832F7AFC797:0x405C42\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x40646E\n  features:\n    - or:\n      - and:\n        - basic block:\n          - and:\n            - description: initialize S\n            # misses if regular loop is used,\n            # however we cannot model that a loop contains a certain number\n            - characteristic: tight loop\n            - or:\n              - number: 0xFF\n              - number: 0x100\n        - or:\n          - description: modulo 256\n          - match: calculate modulo 256 via x86 assembly\n          - basic block:\n            - and:\n              - description: modulo via zero-extended mov from 8-bit register\n              - count(mnemonic(movzx)): 2 or more\n              # avoid false positives; filter out unexpected instructions\n              - not:\n                - or:\n                  - mnemonic: shl\n                  - mnemonic: rol\n                  - characteristic: nzxor\n        - or:\n          - description: modulo key length\n          - mnemonic: div\n          - mnemonic: idiv\n      - and:\n        - description: write DWORDs instead of bytes\n        - or:\n          - number: 0x03020100\n          - number: 0xFFFEFDFC\n        - instruction:\n          - or:\n            - mnemonic: add\n            - mnemonic: sub\n          - number: 0x04040404\n",
                "name": "encrypt data using RC4 KSA",
                "description": "data-manipulation/encryption/rc4"
            },
            {
                "format": "SIG_FORMAT_CAPA",
                "authors": [
                    "moritz.raabe@mandiant.com"
                ],
                "rule_src": "rule:\n  meta:\n    name: encrypt data using RC4 PRGA\n    namespace: data-manipulation/encryption/rc4\n    authors:\n      - moritz.raabe@mandiant.com\n    scope: function\n    att&ck:\n      - Defense Evasion::Obfuscated Files or Information [T1027]\n    mbc:\n      - Cryptography::Encrypt Data::RC4 [C0027.009]\n      - Cryptography::Generate Pseudo-random Sequence::RC4 PRGA [C0021.004]\n    examples:\n      - 34404A3FB9804977C6AB86CB991FB130:0x403DB0\n      - 34404A3FB9804977C6AB86CB991FB130:0x403E50\n      - 9324D1A8AE37A36AE560C37448C9705A:0x4049F0\n      - 73CE04892E5F39EC82B00C02FC04C70F:0x4064C6\n  features:\n    - and:\n      # TODO: maybe add characteristic for nzxor reg size\n      - count(characteristic(nzxor)): 1\n      - or:\n        - match: calculate modulo 256 via x86 assembly\n        # compiler may do this via zero-extended mov from 8-bit register\n        - count(mnemonic(movzx)): 4 or more\n      # should not call (many) functions\n      - count(characteristic(calls from)): (0, 4)\n      # should not be too simple or too complex (50 is picked by intuition)\n      - count(basic blocks): (4, 50)\n      - match: contain loop\n      - optional:\n        - or:\n          - number: 0xFF\n          - number: 0x100\n",
                "name": "encrypt data using RC4 PRGA",
                "description": "data-manipulation/encryption/rc4"
            }
        ],
        "ids_alerts": [
            {
                "rule_category": "attempted-recon",
                "rule_url": "https://www.snort.org/downloads/#rule-downloads",
                "alert_severity": "medium",
                "rule_msg": "(port_scan) UDP portsweep",
                "rule_source": "Snort registered user ruleset",
                "rule_raw": "alert ( gid:122; sid:19; rev:2; msg:\"(port_scan) UDP portsweep\"; metadata: rule-type preproc; classtype:attempted-recon;)",
                "rule_id": "122:19"
            }
        ]
    }
},{
    "data": {
        "Yomi Hunter": {
            "tactics": [
                {
                    "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
                    "techniques": [
                        {
                            "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                            "signatures": [
                                {
                                    "severity": "UNKNOWN",
                                    "description": "access PEB ldr_data"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "Manalize Local SandBox Find Crypto"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "The binary presents some anomalies in its PE header and/or PE sections."
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1129/",
                            "id": "T1129",
                            "name": "Shared Modules"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0002/",
                    "id": "TA0002",
                    "name": "Execution"
                },
                {
                    "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
                    "techniques": [
                        {
                            "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                            "signatures": [
                                {
                                    "severity": "UNKNOWN",
                                    "description": "get process heap flags"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "Manalize Local SandBox Find Crypto"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "The binary presents some anomalies in its PE header and/or PE sections."
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1057/",
                            "id": "T1057",
                            "name": "Process Discovery"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0007/",
                    "id": "TA0007",
                    "name": "Discovery"
                },
                {
                    "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
                    "techniques": [
                        {
                            "description": "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
                            "signatures": [
                                {
                                    "severity": "UNKNOWN",
                                    "description": "resolve function by djb2 hash"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "Manalize Local SandBox Find Crypto"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "contain obfuscated stackstrings"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "The binary presents some anomalies in its PE header and/or PE sections."
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1027/005/",
                            "id": "T1027.005",
                            "name": "Indicator Removal from Tools"
                        },
                        {
                            "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                            "signatures": [
                                {
                                    "severity": "UNKNOWN",
                                    "description": "encode data using XOR"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "encrypt data using Curve25519"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "encrypt data using Salsa20 or ChaCha"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "encrypt data using RC4 KSA"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "encrypt data using RC4 PRGA"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "Manalize Local SandBox Find Crypto"
                                },
                                {
                                    "severity": "UNKNOWN",
                                    "description": "The binary presents some anomalies in its PE header and/or PE sections."
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1027/",
                            "id": "T1027",
                            "name": "Obfuscated Files or Information"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0005/",
                    "id": "TA0005",
                    "name": "Defense Evasion"
                }
            ]
        },
        "CAPA": {
            "tactics": [
                {
                    "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
                    "techniques": [
                        {
                            "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "access PEB ldr_data"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1129/",
                            "id": "T1129",
                            "name": "Shared Modules"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0002/",
                    "id": "TA0002",
                    "name": "Execution"
                },
                {
                    "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
                    "techniques": [
                        {
                            "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "get process heap flags"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1057/",
                            "id": "T1057",
                            "name": "Process Discovery"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0007/",
                    "id": "TA0007",
                    "name": "Discovery"
                },
                {
                    "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
                    "techniques": [
                        {
                            "description": "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "contain obfuscated stackstrings"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "resolve function by djb2 hash"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1027/005/",
                            "id": "T1027.005",
                            "name": "Indicator Removal from Tools"
                        },
                        {
                            "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ",
                            "signatures": [
                                {
                                    "severity": "INFO",
                                    "description": "encode data using XOR"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "encrypt data using Curve25519"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "encrypt data using Salsa20 or ChaCha"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "encrypt data using RC4 PRGA"
                                },
                                {
                                    "severity": "INFO",
                                    "description": "encrypt data using RC4 KSA"
                                }
                            ],
                            "link": "https://attack.mitre.org/techniques/T1027/",
                            "id": "T1027",
                            "name": "Obfuscated Files or Information"
                        }
                    ],
                    "link": "https://attack.mitre.org/tactics/TA0005/",
                    "id": "TA0005",
                    "name": "Defense Evasion"
                }
            ]
        }
    },
    "links": {
        "self": "https://www.virustotal.com/api/v3/files/b39fcf37d9019cc92127ee82c03df5e37aa8238cd76cc6eca2e3d1e7e977fc26/behaviour_mitre_trees"
    }
}]